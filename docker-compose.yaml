version: "1"

volumes:
  postgres3_volume:
  postgres4_volume:

services:
  laboratory:
    build: ./LaboratoryApp
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres3:5432/postgres
      - SPRING_DATASOURCE_USERNAME=baeldung
      - SPRING_DATASOURCE_PASSWORD=baeldung
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update

    ports:
      - "8082:8082"

  clinic:
    build: ./MedicalClinicApp
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres4:5433/postgres
      - SPRING_DATASOURCE_USERNAME=baeldung
      - SPRING_DATASOURCE_PASSWORD=baeldung
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update

    ports:
      - "8080:8080"

  postgres3:
    image: postgres:latest
    container_name: postgres3

    volumes:
      - postgres3_volume:/data/db

    environment:

      - "POSTGRES_USER=baeldung"
      - "POSTGRES_PASSWORD=baeldung"
      - "PGDATA=/data/db"

    ports:
      - "5433:5432"

  postgres4:
    image: postgres:latest
    container_name: postgres4

    volumes:
      - postgres4_volume:/data/db

    environment:
      - "POSTGRES_USER=baeldung"
      - "POSTGRES_PASSWORD=baeldung"
      - "PGDATA=/data/db"

    ports:
      - "5434:5433"

    command: -p 5433

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  broker:
    image: confluentinc/cp-kafka:7.3.2
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - 29092:29092

    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

